[{"/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/index.js":"1","/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/App.js":"2","/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/reportWebVitals.js":"3","/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/Components/Button.js":"4","/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/Components/AutoCompliteWripper.js":"5","/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/Stor/getFromApi.js":"6"},{"size":500,"mtime":1612522063356,"results":"7","hashOfConfig":"8"},{"size":297,"mtime":1612637222883,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612522063356,"results":"10","hashOfConfig":"8"},{"size":786,"mtime":1612559710781,"results":"11","hashOfConfig":"8"},{"size":2365,"mtime":1612637799553,"results":"12","hashOfConfig":"8"},{"size":2441,"mtime":1612559710791,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"371mh9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/index.js",[],["30","31"],"/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/App.js",["32","33","34"],"import logo from './logo.svg';\nimport './App.css';\nimport Main from \"./Components/Button\";\nimport Button from \"./Components/Button\";\nimport Style from \"../src/Style/Style.css\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Button></Button>\n    </div>\n  );\n}\n\nexport default App;\n","/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/reportWebVitals.js",[],"/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/Components/Button.js",["35","36"],"import React, {useEffect} from \"react\"\nimport AutoCompliteWripper from \"./AutoCompliteWripper\"\nimport StoreGetApi from \"../Stor/getFromApi\"\nimport {observer} from \"mobx-react\";\n\nexport default observer(() => {\n        const {state, pending, getSwapi, getWorld, parseState} = StoreGetApi\n\n        useEffect(() => {\n            if (!parseState) {\n                getSwapi(\"https://swapi.dev/api/people\")\n            }\n        }, [])\n\n        useEffect(() => {\n            if (!parseState) {\n                state?.forEach((e) => {\n                    getWorld(e.homeworld)\n                })\n            }\n        }, [pending])\n\n\n        if (pending) {\n            return <p>loading</p>\n        }\n        return (<>\n            <AutoCompliteWripper\n\n            />\n\n        </>)\n    }\n)\n\n","/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/Components/AutoCompliteWripper.js",["37","38","39"],"import Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, {useEffect, useState} from \"react\";\nimport StoreGetApi from \"../Stor/getFromApi\";\nimport {observer} from \"mobx-react\";\n\n\n\nexport default observer(() => {\n    const {\n        worlds,\n        state,\n        parseData,\n        getFilm,\n        selected,\n        setSelected,\n        getCar,\n        parseState,\n        addLikes,\n        getLikesPeople,\n        likesPiople\n    } = StoreGetApi;\n    const [flag, setFlag] = useState(false)\n    const [likeFlag, setLikeFlag] = useState(false)\n\n    useEffect(() => {\n        if (state.length === worlds.length) {\n            parseData()\n        }\n    }, [worlds])\n    useEffect(() => {\n        selected?.films?.forEach((e) => {\n            getFilm(e)\n        })\n        selected?.vehicles?.forEach((e) => {\n            getCar(e)\n        })\n    }, [flag])\n\n    useEffect(() => {\n        getLikesPeople()\n    }, [likeFlag])\n\n    return (<>\n        <div className='motherDiv'>\n            <Autocomplete\n\n                id=\"combo-box-demo\"\n                getOptionSelected={(a, b) => {\n                    if (a.name === b.name) {\n                        setFlag(true)\n                        setSelected(b)\n                    }\n                }}\n                options={parseState}\n                getOptionLabel={(option) => {\n                    return `${option.name},${option.gender},${option.home}`\n                }}\n                style={{width: 300, padding: 100}}\n                renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\"/>}\n            />\n        </div>\n        <div className='motherLi'>\n            <li>{selected.name}</li>\n            <li>{selected.height}</li>\n            <li>{selected.mass}</li>\n            <li>{selected.hair_color}</li>\n            <li>{selected.skin_color}</li>\n            <li>{selected.eye_color}</li>\n            <li>{selected.birth_year}</li>\n            <li>{selected.home}</li>\n            <li>{selected.car}</li>\n            <li>{selected.film}</li>\n        </div>\n\n        <button onClick={() => {\n            addLikes(selected.name)\n            setLikeFlag(!likeFlag)\n        }}>\n            Like\n        </button>\n        {likesPiople && <div>{likesPiople.map((e) => <p>{e.name}</p>)}</div>}\n    </>)\n})\n\n","/home/gunpy/WebstormProjects/Web-Developer/Swapi/swapi/src/Stor/getFromApi.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":12},{"ruleId":"44","severity":1,"message":"49","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":13,"column":12,"nodeType":"52","endLine":13,"endColumn":14,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":21,"column":12,"nodeType":"52","endLine":21,"endColumn":21,"suggestions":"55"},{"ruleId":"50","severity":1,"message":"56","line":30,"column":8,"nodeType":"52","endLine":30,"endColumn":16,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"58","line":38,"column":8,"nodeType":"52","endLine":38,"endColumn":14,"suggestions":"59"},{"ruleId":"50","severity":1,"message":"60","line":42,"column":8,"nodeType":"52","endLine":42,"endColumn":18,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Main' is defined but never used.","'Style' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getSwapi' and 'parseState'. Either include them or remove the dependency array.","ArrayExpression",["64"],"React Hook useEffect has missing dependencies: 'getWorld', 'parseState', and 'state'. Either include them or remove the dependency array.",["65"],"React Hook useEffect has missing dependencies: 'parseData' and 'state.length'. Either include them or remove the dependency array.",["66"],"React Hook useEffect has missing dependencies: 'getCar', 'getFilm', 'selected?.films', and 'selected?.vehicles'. Either include them or remove the dependency array.",["67"],"React Hook useEffect has a missing dependency: 'getLikesPeople'. Either include it or remove the dependency array.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [getSwapi, parseState]",{"range":"79","text":"80"},"Update the dependencies array to be: [getWorld, parseState, pending, state]",{"range":"81","text":"82"},"Update the dependencies array to be: [parseData, state.length, worlds]",{"range":"83","text":"84"},"Update the dependencies array to be: [flag, getCar, getFilm, selected?.films, selected?.vehicles]",{"range":"85","text":"86"},"Update the dependencies array to be: [getLikesPeople, likeFlag]",{"range":"87","text":"88"},[427,429],"[getSwapi, parseState]",[615,624],"[getWorld, parseState, pending, state]",[722,730],"[parseData, state.length, worlds]",[915,921],"[flag, getCar, getFilm, selected?.films, selected?.vehicles]",[978,988],"[getLikesPeople, likeFlag]"]